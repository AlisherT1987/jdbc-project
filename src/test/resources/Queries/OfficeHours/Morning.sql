---- PRACTICE 1 ----


--4. List all the different region_ids in countries table
    SELECT DISTINCT REGION_ID FROM COUNTRIES;


--5. Display the salary of the employee Grant Douglas (lastName: Grant, firstName: Douglas)

    SELECT SALARY FROM EMPLOYEES
    WHERE FIRST_NAME='Douglas' AND LAST_NAME='Grant';

--6. Display all department information from departments table
-- if the department name values are as below
-- IT , Public Relations , Sales , Executive
    -- > OPTION --1
    SELECT * FROM DEPARTMENTS
    WHERE DEPARTMENT_NAME='IT' OR  DEPARTMENT_NAME='Sales' OR  DEPARTMENT_NAME='Public Relations' OR  DEPARTMENT_NAME='Executive';

    -- > OPTION --2
    SELECT * FROM DEPARTMENTS
    WHERE DEPARTMENT_NAME IN ('IT','Sales','Public Relations','Executive');

    -- NOT IN  operator will excluded following departments
    SELECT * FROM DEPARTMENTS
    WHERE DEPARTMENT_NAME NOT IN ('IT','Sales','Public Relations','Executive');

-- 16 . Display all unique job_id that ends with CLERK in employee table

    SELECT DISTINCT JOB_ID FROM EMPLOYEES
    WHERE JOB_ID LIKE '%CLERK';

    SELECT DISTINCT JOB_ID,FIRST_NAME FROM EMPLOYEES
    WHERE JOB_ID LIKE '%CLERK';



-- 20-4 How many employees are there in each group that have minimum
-- salary of 5000 ?

    SELECT JOB_ID,COUNT(*) FROM EMPLOYEES
    WHERE SALARY>=5000
    GROUP BY JOB_ID;

    -- IT WILL FILTER RESULT AFTER GROUP ACCORDING TO THEIR MIN SALARY
    -- SINCE IT PROG EMPLOYEES MIN SALARY IS 4200
    -- IT WILL NOT SHOW THIS GROUP
    SELECT JOB_ID,COUNT(*) FROM EMPLOYEES
    GROUP BY JOB_ID
    HAVING MIN(SALARY)>=5000;


-- 21. display all job_id and average salary who work as any of these jobs
-- IT_PROG,SA_REP, FI_ACCOUNT, AD_VP
    SELECT JOB_ID,AVG(SALARY) AS "AVERAGE SALARY" FROM EMPLOYEES
    WHERE JOB_ID IN ('IT_PROG','SA_REP','FI_ACCOUNT','AD_VP')
    GROUP BY JOB_ID;

    -- IT IS INEFFICIENT
    SELECT JOB_ID,AVG(SALARY) AS "AVERAGE SALARY" FROM EMPLOYEES
    GROUP BY JOB_ID
    HAVING JOB_ID IN ('IT_PROG','SA_REP','FI_ACCOUNT','AD_VP');



-- 23. Display total salary for each department except department_id 50, and where total salary more than 30000
    SELECT DEPARTMENT_ID,SUM(SALARY) FROM EMPLOYEES
    GROUP BY DEPARTMENT_ID
    HAVING SUM(SALARY)>30000;

    -- OPT 1 --> WITH WHERE
    SELECT DEPARTMENT_ID,SUM(SALARY) FROM EMPLOYEES
    WHERE DEPARTMENT_ID!=50
    GROUP BY DEPARTMENT_ID
    HAVING SUM(SALARY)>30000;

    -- OPT 2 --> BAD PRACTICE AND NOT EFFICIENT
    SELECT DEPARTMENT_ID,SUM(SALARY) FROM EMPLOYEES
    GROUP BY DEPARTMENT_ID
    HAVING SUM(SALARY)>30000 AND DEPARTMENT_ID!=50;


---- PRACTICE 2 ----
--8.  Find the 3rd maximum salary from the employees table (do not include duplicates)

    -- STEP 1--> FIND ALL SALARY IN DESC ORDER
    SELECT DISTINCT SALARY FROM EMPLOYEES
    ORDER BY SALARY DESC;


    -- STEP 2--> FIND 3RD HIGHEST SALARY
    SELECT MIN(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                        ORDER BY SALARY DESC)
    WHERE ROWNUM<4;


    -- STEP 3--> FIND EMPLOYEES WHO IS GETTING 3RD HIGHEST SALARY
    SELECT * FROM EMPLOYEES
    WHERE SALARY = (SELECT MIN(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                                             ORDER BY SALARY DESC)
                    WHERE ROWNUM<4);


    -- IQ --> FIND EMPLOYEES WHO IS GETTING 213TH HIGHEST SALARY
    SELECT * FROM EMPLOYEES
    WHERE SALARY = (SELECT MIN(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                                             ORDER BY SALARY DESC)
                    WHERE ROWNUM<214);


--12. Find the 3rd minimum salary from the employees table (do not include duplicates)

    -- STEP 1--> FIND ALL SALARY IN DESC ORDER
    SELECT DISTINCT SALARY FROM EMPLOYEES
    ORDER BY SALARY ASC;


    -- STEP 2--> FIND 3RD LOWEST SALARY
    SELECT MAX(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                             ORDER BY SALARY ASC)
    WHERE ROWNUM<4;


    -- STEP 3--> FIND EMPLOYEES WHO IS GETTING 3RD HIGHEST SALARY
    SELECT * FROM EMPLOYEES
    WHERE SALARY = (SELECT MAX(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                                             ORDER BY SALARY ASC)
                    WHERE ROWNUM<4);



---- PRACTICE 3 ----
-- 1. FIND OUT COUNTRY NAME AND REGION NAME FROM COUNTRIES AND  REGIONS TABLE

    SELECT COUNTRY_NAME,REGION_NAME
    FROM COUNTRIES C
            INNER JOIN REGIONS R on C.REGION_ID = R.REGION_ID;

    -- HOW MANY COUNTRY WE HAVE FOR EACH REGION
    SELECT REGION_NAME,COUNT(COUNTRY_NAME)
    FROM COUNTRIES C
             INNER JOIN REGIONS R on C.REGION_ID = R.REGION_ID
    GROUP BY REGION_NAME;

    -- DISPLAY REGIONS THEY HAVE MORE THAN 5 COUNTRIES
    SELECT REGION_NAME,COUNT(COUNTRY_NAME)
    FROM COUNTRIES C
             INNER JOIN REGIONS R on C.REGION_ID = R.REGION_ID
    GROUP BY REGION_NAME
    HAVING COUNT(COUNTRY_NAME)>5
    ORDER BY COUNT(COUNTRY_NAME) ASC;

    -- NOTE --> TO ORDER RESULT IT IS GOOD TO USE COLUMN NAME TO MAKE IT DYNAMIC ALL THE TIME


-- 3.  FIND OUT DEPARTMENT_NAME AND CITY
    SELECT DEPARTMENT_NAME, CITY , L.LOCATION_ID
    FROM LOCATIONS L
        INNER JOIN DEPARTMENTS D on L.LOCATION_ID = D.LOCATION_ID;



-- 5.  FIND OUT FIRST_NAME, LAST NAME, DEPARTMENT ID , DEPARTMENT NAME FOR DEPARTMENT ID 80 OR 40
    SELECT FIRST_NAME, LAST_NAME, D.DEPARTMENT_ID , DEPARTMENT_NAME
    FROM EMPLOYEES E
        INNER JOIN DEPARTMENTS D on D.DEPARTMENT_ID = E.DEPARTMENT_ID
    WHERE D.DEPARTMENT_ID IN (40,80);


    -- HOW MANY EMPLOYEES WE HAVE FOR EACH DEPARTMENT AND DISPLAY DEPARTMENT NAMES
    SELECT DEPARTMENT_NAME,COUNT(*)
    FROM EMPLOYEES E
         INNER JOIN DEPARTMENTS D on D.DEPARTMENT_ID = E.DEPARTMENT_ID
    GROUP BY DEPARTMENT_NAME
    ORDER BY COUNT(*) DESC;


    -- HOW MANY EMPLOYEES WE HAVE FOR EACH DEPARTMENT AND DISPLAY DEPARTMENT IDS
    SELECT D.DEPARTMENT_ID,COUNT(*)
    FROM EMPLOYEES E
             INNER JOIN DEPARTMENTS D on D.DEPARTMENT_ID = E.DEPARTMENT_ID
    GROUP BY D.DEPARTMENT_ID
    ORDER BY COUNT(*) DESC;

    SELECT DEPARTMENT_ID,COUNT(*)
    FROM EMPLOYEES
    GROUP BY DEPARTMENT_ID
    ORDER BY COUNT(*) DESC;



-- 7. FIND OUT EMPLOYEES FIRST_NAME , JOB_TITLE , DEPARTMENT_NAME ,  CITY
    SELECT FIRST_NAME , JOB_TITLE , DEPARTMENT_NAME ,  CITY
    FROM EMPLOYEES E
        INNER JOIN JOBS J on E.JOB_ID = J.JOB_ID
        INNER JOIN DEPARTMENTS D on E.DEPARTMENT_ID = D.DEPARTMENT_ID
        INNER JOIN LOCATIONS L on D.LOCATION_ID = L.LOCATION_ID;



-- 8. FIND OUT EMPLOYEES FIRST_NAME , JOB_TITLE , DEPARTMENT_NAME ,CITY , COUNTRY_NAME , REGION_NAME

    SELECT FIRST_NAME , JOB_TITLE , DEPARTMENT_NAME ,  CITY,COUNTRY_NAME , REGION_NAME
    FROM EMPLOYEES E
         INNER JOIN JOBS J on E.JOB_ID = J.JOB_ID
         INNER JOIN DEPARTMENTS D on E.DEPARTMENT_ID = D.DEPARTMENT_ID
         INNER JOIN LOCATIONS L on D.LOCATION_ID = L.LOCATION_ID
         INNER JOIN COUNTRIES C on C.COUNTRY_ID = L.COUNTRY_ID
         INNER JOIN REGIONS R on C.REGION_ID = R.REGION_ID;



-- 11 .FIND OUT DEPARTMENT_NAME , LOCATION_ID , AND COUNTRY_NAME INCLUDING THOSE COUNTRIES WITH NO DEPARTMENT


